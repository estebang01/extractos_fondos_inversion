import re
from datetime import datetime
import PyPDF2
import pandas as pd
import os
import email
import imaplib
import locale
from locale import atof


nombre_archivo_excel = 'C:\\Users\\esteb\\Documents\\Automatización\\Fondos de Inversion.xlsx'


# Leer el archivo Excel existente (si existe) o crear un DataFrame vacío si no existe
df_existente = pd.read_excel(nombre_archivo_excel, index_col=0)  # Asegúrate de que los índices múltiples se mantengan
df_existente.index = pd.to_datetime(df_existente.index)
# Email credentials
email_user = 'estebangomez07042001@gmail.com'
email_pass = 'qaux zfpx recr fufp'

# Connect to the Gmail server
mail = imaplib.IMAP4_SSL('imap.gmail.com')
mail.login(email_user, email_pass)
mail.select('inbox')

# Obtener el primer día de hace dos meses
primer_dia_mes = datetime.now().replace(day=1).strftime('%d-%b-%Y')

# Search for emails from a specific sender received since the first day of two months ago
tipo, data = mail.search(None, '(FROM "extractosbancolombia@extractos.documentosbancolombia.com" SINCE "{}")'.format(primer_dia_mes))

fondos_path = 'C:/Users/esteb/Documents/Automatización/Extractos/Fondos_Bancolombia'
finanzas_personales_path = 'C:/Users/esteb/Documents/Automatización/Extractos/Finanzas_Bancolombia'

# Make sure the directories exist
os.makedirs(fondos_path, exist_ok=True)
os.makedirs(finanzas_personales_path, exist_ok=True)
# Resto del código para procesar los correos y descargar los archivos...

for num in data[0].split():
    typ, msg_data = mail.fetch(num, '(RFC822)')
    for response_part in msg_data:
        if isinstance(response_part, tuple):
            msg = email.message_from_bytes(response_part[1])
            for part in msg.walk():
                if part.get_content_maintype() == 'multipart':
                    continue

                # Check if part has Content-Disposition header (indicative of an attachment)
                if part.get('Content-Disposition') is not None:
                    filename = part.get_filename()
                    if filename:
                        # Determine the correct path based on the filename
                        if any(keyword in filename.upper() for keyword in ["FIDUCUENTA", "FIDURENTA", "RENTA_ACCIONES","RENTA_FIJAPLAZO"]):
                            continue
                            #filepath = os.path.join(fondos_path, filename)
                        else:
                            filepath = os.path.join(finanzas_personales_path, filename)

                        # Check if file already exists
                        if not os.path.isfile(filepath):
                            with open(filepath, 'wb') as fp:
                                fp.write(part.get_payload(decode=True))
                            print(f'Saved {filename}')
                        else:
                            print(f'File {filename} already exists. Skipping download.')

# Close the mail connection
mail.close()
mail.logout()